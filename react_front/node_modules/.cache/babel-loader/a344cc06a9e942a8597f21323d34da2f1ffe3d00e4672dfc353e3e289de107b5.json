{"ast":null,"code":"// context/SettingsContext.js\nimport React,{createContext,useState,useMemo}from'react';import{ThemeProvider,createTheme,CssBaseline}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const SettingsContext=/*#__PURE__*/createContext();export const SettingsProvider=_ref=>{let{children}=_ref;const[language,setLanguage]=useState('en');// 默认语言\nconst[themeMode,setThemeMode]=useState('light');// 默认主题模式\nconst toggleLanguage=()=>setLanguage(language==='en'?'cn':'en');const toggleTheme=()=>setThemeMode(themeMode==='light'?'dark':'light');// 动态生成 Material-UI 主题\nconst theme=useMemo(()=>createTheme({palette:{mode:themeMode// Material 默认支持的 Light/Dark 模式\n}}),[themeMode]);return/*#__PURE__*/_jsx(SettingsContext.Provider,{value:{language,themeMode,toggleLanguage,toggleTheme},children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),children]})});};","map":{"version":3,"names":["React","createContext","useState","useMemo","ThemeProvider","createTheme","CssBaseline","jsx","_jsx","jsxs","_jsxs","SettingsContext","SettingsProvider","_ref","children","language","setLanguage","themeMode","setThemeMode","toggleLanguage","toggleTheme","theme","palette","mode","Provider","value"],"sources":["/Users/stev/Desktop/Personal-Website/react_front/src/context/SettingsContext.js"],"sourcesContent":["// context/SettingsContext.js\nimport React, { createContext, useState, useMemo } from 'react';\nimport { ThemeProvider, createTheme, CssBaseline } from '@mui/material';\n\nexport const SettingsContext = createContext();\n\nexport const SettingsProvider = ({ children }) => {\n  const [language, setLanguage] = useState('en'); // 默认语言\n  const [themeMode, setThemeMode] = useState('light'); // 默认主题模式\n\n  const toggleLanguage = () => setLanguage(language === 'en' ? 'cn' : 'en');\n  const toggleTheme = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light');\n\n  // 动态生成 Material-UI 主题\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: themeMode, // Material 默认支持的 Light/Dark 模式\n        },\n      }),\n    [themeMode]\n  );\n\n  return (\n    <SettingsContext.Provider value={{ language, themeMode, toggleLanguage, toggleTheme }}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline 应用全局背景颜色和字体颜色 */}\n        <CssBaseline />\n        {children}\n      </ThemeProvider>\n    </SettingsContext.Provider>\n  );\n};\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAC/D,OAASC,aAAa,CAAEC,WAAW,CAAEC,WAAW,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExE,MAAO,MAAM,CAAAC,eAAe,cAAGV,aAAa,CAAC,CAAC,CAE9C,MAAO,MAAM,CAAAW,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAE;AAChD,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,OAAO,CAAC,CAAE;AAErD,KAAM,CAAAiB,cAAc,CAAGA,CAAA,GAAMH,WAAW,CAACD,QAAQ,GAAK,IAAI,CAAG,IAAI,CAAG,IAAI,CAAC,CACzE,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAMF,YAAY,CAACD,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CAEhF;AACA,KAAM,CAAAI,KAAK,CAAGlB,OAAO,CACnB,IACEE,WAAW,CAAC,CACViB,OAAO,CAAE,CACPC,IAAI,CAAEN,SAAW;AACnB,CACF,CAAC,CAAC,CACJ,CAACA,SAAS,CACZ,CAAC,CAED,mBACET,IAAA,CAACG,eAAe,CAACa,QAAQ,EAACC,KAAK,CAAE,CAAEV,QAAQ,CAAEE,SAAS,CAAEE,cAAc,CAAEC,WAAY,CAAE,CAAAN,QAAA,cACpFJ,KAAA,CAACN,aAAa,EAACiB,KAAK,CAAEA,KAAM,CAAAP,QAAA,eAE1BN,IAAA,CAACF,WAAW,GAAE,CAAC,CACdQ,QAAQ,EACI,CAAC,CACQ,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}